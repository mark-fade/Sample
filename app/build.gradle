apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'

android {
    compileSdkVersion compile_sdk_version
    buildToolsVersion build_tools_version
    defaultConfig {
        multiDexEnabled true
        applicationId "com.example.sample"
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode version_code
        versionName version_name
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    //编译类型，针对每个类型可以有不同的编译配置，默认的有debug、release 的类型。
    buildTypes {
        debug {
            // 开发环境
            buildConfigField 'String', 'API_HOST_URL', '"http://www.sojson.com/"'
        }
        tmode {
            //测试环境
            buildConfigField 'String', 'API_HOST_URL', '"http://www.sojson.com/"'
        }
        release {
            //生产环境
            //开启自己定义的混淆规则文件
            minifyEnabled true
            //开启删除无用资源
            shrinkResources true
            //配置代码混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField 'String', 'API_HOST_URL', '"http://www.sojson.com/"'

            // 自定义输出配置
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        def date = Calendar.getInstance();
                        def timeStr = "_" + date.get(Calendar.YEAR) + (((date.get(Calendar.MONTH) + 1) >= 10 ? date.get(Calendar.MONTH) + 1 : "0" + (date.get(Calendar.MONTH) + 1))) + (date.get(Calendar.DAY_OF_MONTH) >= 10 ? date.get(Calendar.DAY_OF_MONTH) : "0" + date.get(Calendar.DAY_OF_MONTH)) + "_" + (date.get(Calendar.HOUR_OF_DAY) >= 10 ? date.get(Calendar.HOUR_OF_DAY) : "0" + date.get(Calendar.HOUR_OF_DAY)) + (date.get(Calendar.MINUTE) >= 10 ? date.get(Calendar.MINUTE) : "0" + date.get(Calendar.MINUTE)) + ".apk";
                        def fileName = "Android_${defaultConfig.versionName}_${defaultConfig.versionCode}" + timeStr;
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }


    }
}

//自定义路径
greendao {
    schemaVersion version_code
    daoPackage 'com.example.baseproject.gen'
    targetGenDir 'src/main/java'
}

//这个是添加了rxlifecycle之后出现的问题，估计是里面的jar包冲突。
configurations.all {
    resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile "com.android.support:recyclerview-v7:$support_lib_version"
    // dagger 注意这里的依赖即使是在datamodule里面添加了相应的库，也得在这里加上，具体原因不清楚。
    // 编译时期生成代码的类库在运行期并不需要，那么将其分为两个库，（运行类库dagger）和（编译器生成代码类库（dagger-compiler）），那么在打包时，就不需要将dagger-compiler打入其中（用不到），减小APK 的大小。
    compile "com.google.dagger:dagger:$dagger_version"
    // dagger是主要的工具类库
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger_version"
    // dagger-compiler为编译时期生成代码等相关的类库
    provided "javax.annotation:jsr250-api:$javax_annotation_version"
    // 添加java 注解库
    // rx
    compile "com.trello:rxlifecycle:$rxlifecycler_version"
    compile "com.trello:rxlifecycle-components:$rxlifecycler_version"
    compile "com.tbruyelle.rxpermissions:rxpermissions:$rxpermission_version@aar"
    //butterknife
    compile "com.jakewharton:butterknife:$butterknife_version"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterknife_version"
    //greendao数据库相关的库
    //监控内存泄漏
    compile project(':data')
    compile 'org.greenrobot:greendao:3.2.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:support-v4:26.+'
    tmodeCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
}
